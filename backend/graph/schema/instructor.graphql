type Instructor implements Node {
  id: ID!
  name: String!
  syllabicCharacters: String!
  biography: String
  phoneNumber: String
  email: String
  createTime: Time!
  updateTime: Time!
}

type InstructorConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [InstructorEdge]
}

type InstructorEdge {
  node: Instructor
  cursor: Cursor!
}

input CreateInstructorInput {
  name: String!
  syllabicCharacters: String!
  biography: String
  phoneNumber: String
  email: String
}

extend type Query {
  instructor(id: ID!): Instructor!
  instructors(after: Cursor, first: Int, before: Cursor, last: Int): InstructorConnection
}

extend type Mutation {
  createInstructor(input: CreateInstructorInput!): Instructor!
}
