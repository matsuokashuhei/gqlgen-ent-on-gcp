type Instructor {
  id: ID!
  name: String!
  syllabicCharacters: String!
  biography: String
  phoneNumber: String
  email: String
  createdAt: Time!
  updatedAt: Time!
}

# type InstructorsConnection {
#   totalCount: Int!
#   edges: [InstructorEdge!]
#   instructors: [Instructor!]
#   pageInfo: PageInfo!
# }
#
# type InstructorEdge {
#   cursor: ID!
#   node: Instructor
# }

input CreateInstructorInput {
  name: String!
  syllabicCharacters: String!
  biography: String
  phoneNumber: String
  email: String
}

extend type Query {
  instructor(id: ID!): Instructor!
  instructors(offset: Int, limit: Int): [Instructor]!
}

extend type Mutation {
  createInstructor(input: CreateInstructorInput!): Instructor!
}
