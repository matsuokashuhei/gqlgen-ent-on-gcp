steps:
  # - name: 'gcr.io/cloud-builders/docker'
  #   args:
  #   - 'build'
  #   - '-f'
  #   - 'backend/Dockerfile'
  #   - '-t'
  #   - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_ID}/backend:${SHORT_SHA}'
  #   - './backend'
  # - name: 'gcr.io/cloud-builders/docker'
  #   args:
  #   - push
  #   - ${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_ID}/backend:${SHORT_SHA}
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: 'gcloud'
  #   args:
  #   - 'run'
  #   - 'deploy'
  #   - 'backend'
  #   - '--image'
  #   - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_ID}/backend:${SHORT_SHA}'
  #   - '--region'
  #   - '${_REGION}'
  # - name: 'bash'
  #   args: ['echo', 'I am running in a private pool!']
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      curl https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -o cloud_sql_proxy
      chmod +x cloud_sql_proxy
      ./cloud_sql_proxy -instances=studio-landin-dev:asia-northeast1:landin-cd4e96ea=tcp:3306
      curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar xvz
      ./migrate -database "${_MYSQL_URL}" -path ./backend/migrations up

logsBucket: 'gs://studio-landin-dev-cloudbuild'

options:
  logging: 'GCS_ONLY'
  pool:
    name: '${_POOL_NAME}'

images:
 - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_ID}/backend:${SHORT_SHA}'
