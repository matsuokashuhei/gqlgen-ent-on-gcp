// Code generated by entc, DO NOT EDIT.

package membersclass

import (
	"time"
)

const (
	// Label holds the string label denoting the membersclass type in the database.
	Label = "members_class"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldDateOfAdmission holds the string denoting the date_of_admission field in the database.
	FieldDateOfAdmission = "date_of_admission"
	// FieldDateOfWithdrawal holds the string denoting the date_of_withdrawal field in the database.
	FieldDateOfWithdrawal = "date_of_withdrawal"
	// EdgeMember holds the string denoting the member edge name in mutations.
	EdgeMember = "member"
	// EdgeClass holds the string denoting the class edge name in mutations.
	EdgeClass = "class"
	// Table holds the table name of the membersclass in the database.
	Table = "members_classes"
	// MemberTable is the table that holds the member relation/edge.
	MemberTable = "members_classes"
	// MemberInverseTable is the table name for the Member entity.
	// It exists in this package in order to avoid circular dependency with the "member" package.
	MemberInverseTable = "members"
	// MemberColumn is the table column denoting the member relation/edge.
	MemberColumn = "member_members_classes"
	// ClassTable is the table that holds the class relation/edge.
	ClassTable = "members_classes"
	// ClassInverseTable is the table name for the Class entity.
	// It exists in this package in order to avoid circular dependency with the "class" package.
	ClassInverseTable = "classes"
	// ClassColumn is the table column denoting the class relation/edge.
	ClassColumn = "class_members_classes"
)

// Columns holds all SQL columns for membersclass fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldDateOfAdmission,
	FieldDateOfWithdrawal,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "members_classes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"class_members_classes",
	"member_members_classes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
